//TC -O(N) SC-O(N)
class Solution {
    public int candy(int[] ratings) {
       int candies =0;
       int n = ratings.length;
       int[] left = new int[n];
       int right[] =new int[n];

       Arrays.fill(left,1);
       Arrays.fill(right,1);

       for(int i =1;i<n;i++){
        if(ratings[i]>ratings[i-1]) 
        left[i] =left[i-1]+1;
       }

       for(int i = n-2;i>=0;i--){
        if(ratings[i+1]<ratings[i])
        right[i] =right[i+1]+1;
       }

       for(int i=0;i<n;i++){
        candies += Math.max(left[i],right[i]);
       }
       return candies;
    }
}

TC O(N) Sc O(1)
class Solution {
    public int candy(int[] ratings) {
        // Agar sirf ek bacha hai, to ek candy hi chahiye
        if (ratings.length <= 1) return ratings.length;

        // up -> increasing slope length
        // down -> decreasing slope length
        // prevSlope -> pichla slope (+1, 0, -1)
        // candies -> total candies count
        int up = 0, down = 0, prevSlope = 0;
        int candies = 0;

        // Loop start from 1 because we compare i and i-1
        for (int i = 1; i < ratings.length; i++) {
            // Current slope calculate karo
            int currSlope = (ratings[i] > ratings[i - 1]) ? 1 :
                            (ratings[i] < ratings[i - 1]) ? -1 : 0;
            // Agar mountain ya valley khatam ho gayi
            if ((prevSlope < 0 && currSlope >= 0) || 
                (prevSlope > 0 && currSlope == 0)) {
                // Mountain complete hone par total candies add karo
                candies += sum(up) + sum(down) + Math.max(up, down);   
                // Reset counters
                up = 0;
                down = 0;
            }
            // Ab current slope ke hisaab se increment karo
            if (currSlope > 0) up++;
            else if (currSlope < 0) down++;
            else candies++;  // equal case (flat slope)
            // Update prevSlope
            prevSlope = currSlope;
        }
        // Loop ke baad last mountain ke candies add karo
        candies += sum(up) + sum(down) + Math.max(up, down) + 1;

        return candies;
    }
    private int sum(int n) {
        return n * (n + 1) / 2;
    }
}
